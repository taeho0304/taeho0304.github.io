I"G<h2 id="좋은-객체-지향-설계의-5가지-원칙solid">좋은 객체 지향 설계의 5가지 원칙(SOLID)</h2>

<h3 id="solid란">SOLID란?</h3>

<h4 id="클린코드로-유명한-로버트-마틴이-정리한-좋은-객체-지향-설계의-5가지-원칙">클린코드로 유명한 로버트 마틴이 정리한 좋은 객체 지향 설계의 5가지 원칙</h4>

<ul>
  <li>SRP (single resposibility principle) : 단일 책임 원칙</li>
  <li>OCP : 개방-폐쇄 원칙 (Open/closed priciple)</li>
  <li>LSP : 리스코프 치환 원칙 (Liskov substitution priciple)</li>
  <li>ISP : 인터페이스 분리 원칙 (Interface segregation priciple)</li>
  <li>DIP : 의존관계 역전 원칙 (Despendency inversion priciple)</li>
</ul>

<h4 id="1-srp-단일-책임-원칙">1. SRP 단일 책임 원칙</h4>
<ul>
  <li>하나의 클래스는 하나의 책임만 가져야 한다.</li>
</ul>

<h4 id="312-다운스트림으로-흐르는-메시지">3.1.2 다운스트림으로 흐르는 메시지</h4>
<ul>
  <li>요청 메시지냐 응답 메시지냐에 관계없이 모든 메시지는 다운스트림으로 흐름</li>
  <li>메시지 발송자는 수신자의 업 스트림</li>
</ul>

<h3 id="32-메시지의-각-부분">3.2 메시지의 각 부분</h3>
<ul>
  <li>HTTP 메시지는 단순한, 데이터의 구조화된 블록</li>
</ul>
:ET