I"<h2 id="http-완벽가이드1-http-개관---2">HTTP 완벽가이드[1] HTTP 개관 - (2)</h2>

<h3 id="15-메시지">1.5 메시지</h3>
<ul>
  <li>HTTP 메시지는 단순한 줄 단위의 물자열</li>
  <li>종류 - 요청 메시지(웹 클라이언트 -&gt; 웹 서버), 응답 메시지(서버 -&gt; 클라이언트)</li>
  <li>HTTP의 세 부분
    <ul>
      <li>시작점
        <blockquote>
          <p>요청이라면 무엇을 해야하는지 응답이라면 무슨일이 있어났는지 나타냄</p>

        </blockquote>
      </li>
      <li>헤더
        <blockquote>
          <p>0개 이상의 헤더 필드로 구성</p>

          <p>쉬운 구문분석을 위해 쌍점(:)으로 구분되어 있는 하나의 이름과 하나의 값으로 구성</p>

          <p>헤더는 빈줄로 끝남</p>

        </blockquote>
      </li>
      <li>본문
        <blockquote>
          <p>어떤 종류의 데이터든 들어갈 수 있는 메시지 본문이 필요에 따라 올 수 있음</p>

          <p>요청의 본문 - 웹 서버로 데이터를 실어보냄</p>

          <p>응답의 본문 - 클라이언트로 데이터를 반환</p>

          <p>문자열이며 구조적인 시작줄이나 헤더와 달리, 임의의 이진 데이터 포함 가능</p>

        </blockquote>
      </li>
    </ul>
  </li>
  <li>
    <p>요청 메시지와 응답 메시지 예시</p>

    <p><img src="https://taeho0304.github.io/assets/img/HTTP/1_2.jpeg" alt="" /></p>
  </li>
</ul>

<h3 id="16-tcp-커넥션">1.6 TCP 커넥션</h3>
<ul>
  <li>HTTP는 애플리케이션 계층 프로토콜 -&gt; 네트워크 통신의 세부사항에 대해서는 신경쓰지 않고, 대신 대중적이고 신뢰성 있는 인터넷 전송 프로토콜인 TCP/IP에게 맡김</li>
</ul>

<h4 id="161-tcpip">1.6.1 TCP/IP</h4>
<ul>
  <li>TCP/IP는 패킷 교환 프로토콜의 집합</li>
  <li>각 네트워크와 하드웨어의 특성을 숨기고, 어떤 종류의 컴퓨터나 네트워크든 서로 신뢰성 있는 의사소통을 하게 해 줌</li>
  <li>일단 TCP 커넥션이 맺어지면, 클라이언트와 서버 컴퓨터 간에 교환되는 메시지가 없어지거나, 손상되거나, 순서가 뒤바뀌어 수신되는 일은 결코 없다.</li>
  <li>TCP는 다음을 제공한다.
    <blockquote>
      <ol>
        <li>
          <p>오류 없는 데이터 전송</p>
        </li>
        <li>
          <p>순서에 맞는 전달( 데이터 전달은 언제나 보낸 순서대로 도착)</p>
        </li>
        <li>
          <p>조각나지 않는 데이터 스트림( 언제든 어떤 크기로 보낼 수 있음)</p>
        </li>
      </ol>

    </blockquote>
  </li>
  <li>네트위크 개념상, HTTP 프로토콜은 TCP 위의 계층 - HTTP는 자신의 메시지 데이터를 전송하기 위해 TCP를 사용</li>
  <li>TCP는 IP 위의 계층</li>
</ul>

<p><img src="https://taeho0304.github.io/assets/img/HTTP/1_3.jpeg" alt="" /></p>

<h4 id="162-접속-ip-주소-그리고-포트번호">1.6.2 접속, IP 주소 그리고 포트번호</h4>
<ul>
  <li>HTTP 클라이언트가 서버에 메시지를 전송할 수 있게 되기 전, 클라이언트와 서버 사이에 TCP/IP 커넥션을 맺어야 함</li>
  <li>커넥션을 맺기 위해서 인터넷 프로토콜(IP)주소와 포트번호가 필요
<img src="https://taeho0304.github.io/assets/img/HTTP/1_4.jpeg" alt="" /></li>
  <li>클라이언트 - 서버 사이의 통신 순서
    <blockquote>
      <ol>
        <li>
          <p>웹 브라우저는 서버의 URL에서 호스트 명을 추출</p>
        </li>
        <li>
          <p>웹 브라우저는 DNS를 통해 호스트명을 IP로 변환</p>
        </li>
        <li>
          <p>웹 브라우저는 URL에서 포트번호(있다면)를 추출( URL에 포트번호가 빠진 경우에는 기본값 80이라고 가정)</p>
        </li>
        <li>
          <p>웹 브라우저는 웹 서버와 TCP 커넥션을 맺음</p>
        </li>
        <li>
          <p>웹 브라우저는 서버에 HTTP 요청을 보냄</p>
        </li>
        <li>
          <p>서버는 웹 브라우저에 HTTP 응답을 돌려줌</p>
        </li>
        <li>
          <p>커넥션이 닫히면, 웹 브라우저는 문서를 보여줌</p>
        </li>
      </ol>
    </blockquote>
  </li>
</ul>

<h3 id="17-프로토콜-버전">1.7 프로토콜 버전</h3>
<ul>
  <li>HTTP/1.0 : 처음으로 널리 쓰이기 시작한 HTTP 버전</li>
  <li>HTTP/1.1 : 설계의 구조적 결함 교정, 두드러진 성능 최적화, 잘못된 기능을 제거한 버전</li>
  <li>HTTP/2.0 : 전체 요청을 통한 지연 시간 감소, 응답 다중화 지원, HTTP 헤더 필드의 효율적 압축을 통한 프로토콜 오버헤드 최소화, 요청 우선 순위 지정 추가, 서버 푸시 지원 등을 추가한 현재의 HTTP 버전</li>
</ul>

<h3 id="18-웹의-구성-요소">1.8 웹의 구성 요소</h3>
<ul>
  <li>프락시 -&gt; 6장, 캐시 -&gt; 7장, 게이트웨이, 터널 -&gt; 8장, 에이전트 -&gt; 9장에서 자세히 다률 예정</li>
</ul>

<h4 id="181-프락시">1.8.1 프락시</h4>
<ul>
  <li>클라이언트와 서버 사이에 위치하여, 클라이언트의 모든 HTTP 요청을 받아 서버에 전달</li>
  <li>주로 보안을 위해 사용 - 모든 웹 트래픽 흐름 속에서 신뢰할 만한 중개자 역할</li>
  <li>요청과 응답을 필터링 ( 컨텐츠 다운로드 시 바이러스 검출, 초등학교 학생들에게서 성인 콘텐츠 차단 등 )</li>
</ul>

<h4 id="182-캐시">1.8.2 캐시</h4>
<ul>
  <li>자신을 거쳐 가는 문서들 중 자주 찾는 것의 사본을 저장해 두는, 특별한 종류의 HTTP 프락시 서버</li>
  <li>멀리 떨어진 웹 서버보다 근처의 캐시에서 훨씬 더 빨리 문서를 다운받을 수 있음</li>
</ul>

<h4 id="183-게이트웨이">1.8.3 게이트웨이</h4>
<ul>
  <li>다른 서버들의 중개자로 동작하는 특별한 서버</li>
  <li>주로 HTTP 트래픽을 다른 프로토콜로 변환하기 위해 사용</li>
</ul>

<h4 id="184-터널">1.8.4 터널</h4>
<ul>
  <li>두 커넥션 사이에서 날(raw) 데이터를 열어보지 않고 그대로 전달해 주는 HTTP 애플리케이션</li>
  <li>HTTP 터널은 주로 비 HTTP 데이터를 하나 이상의 HTTP 연결을 통해 그대로 전송해 주기 위해 사용</li>
</ul>

<h4 id="185-에이전트">1.8.5 에이전트</h4>
<ul>
  <li>사용자를 자동화 된 HTTP 요청을 만들는 준지능적(semi-intelligent) 웹클라이언트</li>
  <li>웹 요청을 만드는 애플리케이션은 모두 HTTP 에이전트</li>
</ul>
:ET