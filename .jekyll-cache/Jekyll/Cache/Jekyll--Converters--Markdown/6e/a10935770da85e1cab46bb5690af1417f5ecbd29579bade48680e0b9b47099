I"E<h3 id="15-메시지">1.5 메시지</h3>
<ul>
  <li>HTTP 메시지는 단순한 줄 단위의 물자열</li>
  <li>종류 - 요청 메시지(웹 클라이언트 -&gt; 웹 서버), 응답 메시지(서버 -&gt; 클라이언트)</li>
  <li>HTTP의 세 부분
    <ul>
      <li>시작점
        <blockquote>
          <p>요청이라면 무엇을 해야하는지 응답이라면 무슨일이 있어났는지 나타냄</p>

        </blockquote>
      </li>
      <li>헤더
        <blockquote>
          <p>0개 이상의 헤더 필드로 구성</p>

          <p>쉬운 구문분석을 위해 쌍점(:)으로 구분되어 있는 하나의 이름과 하나의 값으로 구성</p>

          <p>헤더는 빈줄로 끝남</p>

        </blockquote>
      </li>
      <li>본문
        <blockquote>
          <p>어떤 종류의 데이터든 들어갈 수 있는 메시지 본문이 필요에 따라 올 수 있음</p>

          <p>요청의 본문 - 웹 서버로 데이터를 실어보냄</p>

          <p>응답의 본문 - 클라이언트로 데이터를 반환</p>

          <p>문자열이며 구조적인 시작줄이나 헤더와 달리, 임의의 이진 데이터 포함 가능</p>

        </blockquote>
      </li>
    </ul>
  </li>
</ul>

<p><img src="https://taeho0304.github.io/assets/img/HTTP/1_2.jpeg" alt="" /></p>

<h3 id="16-tcp-커넥션">1.6 TCP 커넥션</h3>
<ul>
  <li>HTTP는 애플리케이션 계층 프로토콜 -&gt; 네트워크 통신의 세부사항에 대해서는 신경쓰지 않고, 대신 대중적이고 신뢰성 있는 인터넷 전송 프로토콜인 TCP/IP에게 맡김</li>
</ul>

<h4 id="161-tcpip">1.6.1 TCP/IP</h4>
<ul>
  <li>TCP/IP는 패킷 교환 프로토콜의 집합</li>
  <li>각 네트워크와 하드웨어의 특성을 숨기고, 어떤 종류의 컴퓨터나 네트워크든 서로 신뢰성 있는 의사소통을 하게 해 줌</li>
  <li>일단 TCP 커넥션이 맺어지면, 클라이언트와 서버 컴퓨터 간에 교환되는 메시지가 없어지거나, 손상되거나, 순서가 뒤바뀌어 수신되는 일은 결코 없다.</li>
  <li>TCP는 다음을 제공한다.
    <blockquote>
      <ol>
        <li>
          <p>오류 없는 데이터 전송</p>
        </li>
        <li>
          <p>순서에 맞는 전달( 데이터 전달은 언제나 보낸 순서대로 도착)</p>
        </li>
        <li>
          <p>조각나지 않는 데이터 스트림( 언제든 어떤 크기로 보낼 수 있음)</p>
        </li>
      </ol>

      <p><img src="https://taeho0304.github.io/assets/img/HTTP/1_3.jpeg" alt="" /></p>
    </blockquote>
  </li>
</ul>

<h4 id="162-접속-ip-주소-그리고-포트번호">1.6.2 접속, IP 주소 그리고 포트번호</h4>
<ul>
  <li>HTTP 클라이언트가 서버에 메시지를 전송할 수 있게 되기 전, 인터넷 프로토콜(IP)주소와 포트번호를 사용해 클라이언트와 서버 사이에 TCP/IP 커넥션을 맺어야 함</li>
</ul>

<h4 id="131-미디어-타입">1.3.1 미디어 타입</h4>
<ul>
  <li>인터넷은 수천 가지 데이터 타입을 다루기 때문에, HTTP는 웹에서 전송되는 객체 각각에 MIME(Multipurpose Internet Mail Extensions, 다목적 인터넷 메일 확장) 타입이라는 데이터 포맷 라벨을 붙임</li>
  <li>웹 브라우저는 서버로부터 객체를 돌려받을 때, 다룰 수 있는 객체인지 MIME 타입을 통해 확인</li>
  <li>MIME 타입은 사선(/)으로 구분된 주 타입(primary object type)과 부 타입(specific subtype)으로 이루어진 문자열 라벨
    <blockquote>
      <p>HTML로 작성된 텍스트 문서는 text/html</p>

      <p>JPEG 이미지는 image/jpeg</p>

      <p>GIF 이미지는 image/gif</p>

      <p>마이크로소프트 파워포인트 프레젠테이션은 application/vnd.ms-powerpoint</p>
    </blockquote>
  </li>
</ul>

<h4 id="132-uri">1.3.2 URI</h4>
<ul>
  <li>웹 서버 리소스 이름은 통합 자원 식별자, 혹은 URI(uniform resource identifier)로 불림</li>
  <li>URI에는 URL, URN이라는 두 가지 자원 식별자가 존재</li>
</ul>

<h4 id="133-url">1.3.3 URL</h4>
<ul>
  <li>통합 자원 지시자(uniform resource locator, URL)는 특정 서버의 한 시소스에 대한 구체적인 위치를 서술</li>
  <li>대부분의 URL은 세 부분으로 이루어진 표준 포맷을 따름
    <blockquote>
      <p>URL의 첫 번째 부분 스킴(scheme)은 리소스에 접근하기 위해 사용되는 프로토콜을 서술 - 보통 HTTP 프로토콜(http://)</p>

      <p>두 번째 부분은 서버의 인터넷 주소를 제공(예: www.taeho0304.github.io)</p>

      <p>마지막 부분은 웹 서버의 리소스를 서술 (예: /assets/img/HTTP/1_1.jpeg)</p>
    </blockquote>
  </li>
  <li>오늘날 대부분의 URI는 URL</li>
</ul>

<h4 id="134-urn">1.3.4 URN</h4>
<ul>
  <li>리소스의 위치에 영향 받지 않는 유일무이한 이름 역할</li>
  <li>리소스를 여기저기 옮기거나 여러 종류의 네트워크 접속 프로토콜로 접근해도 문제없이 동작</li>
  <li>라소스 위치를 분석하기 위한 인프라의 부재로 채택이 늦춰지는 중</li>
</ul>

<h3 id="14-트랜잭션">1.4 트랜잭션</h3>
<ul>
  <li>HTTP 트랜잭션은 요청 명령과 응답 결과로 구성</li>
</ul>

<h4 id="141-메서드">1.4.1. 메서드</h4>
<ul>
  <li>HTTP는 HTTP 메서드라고 불리는 여러 가지 종류의 요청 명령을 지원</li>
  <li>
    <p>HTTP 요청 메시지는 한 개의 메서드를 가짐</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">HTTP 메서드</th>
          <th style="text-align: left">설명</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left">GET</td>
          <td style="text-align: left">서버에서 클라이언트로 지정한 리소스를 보내라</td>
        </tr>
        <tr>
          <td style="text-align: left">PUT</td>
          <td style="text-align: left">클라이언트에서 서버로 보낸 데이터를 지정한 이름의 리소스로 저장하라</td>
        </tr>
        <tr>
          <td style="text-align: left">DELETE</td>
          <td style="text-align: left">지정한 리소스를 서버에서 삭제하라</td>
        </tr>
        <tr>
          <td style="text-align: left">POST</td>
          <td style="text-align: left">클라이언트 데이터를 서버 게이트웨이 애플리케이션으로 보내라</td>
        </tr>
        <tr>
          <td style="text-align: left">HEAD</td>
          <td style="text-align: left">지정한 리소스에 대한 응답에서, HTTP 헤더 부분만 모내라</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h4 id="142-상태코드">1.4.2 상태코드</h4>
<ul>
  <li>클라이언트에게 요청이 성공했는지 아니면 추가 조치가 필요한지 알려주는 세 자리 숫자</li>
  <li>
    <p>모든 HTTP 응답 메시지는 상태 코드와 함께 반환</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">HTTP 상태 코드</th>
          <th style="text-align: left">설명</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left">200</td>
          <td style="text-align: left">성공. 문서가 바르게 반환됨</td>
        </tr>
        <tr>
          <td style="text-align: left">302</td>
          <td style="text-align: left">요청한 리소스의 URL이 일시적으로 변경됨</td>
        </tr>
        <tr>
          <td style="text-align: left">404</td>
          <td style="text-align: left">리소스를 찾을 수 없음</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>
:ET